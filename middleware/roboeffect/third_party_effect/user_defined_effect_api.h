
/**
 **************************************************************************************
 * @file    user_defined_effect_api.h
 * @brief   interface for user defined effect algorithm
 *          Automatically generated by the script, no manual modification required.
 *
 * @author  Castle Cai
 * @version V1.0.0
 *
 * &copy; Shanghai Mountain View Silicon Technology Co.,Ltd. All rights reserved.
 **************************************************************************************
 */

#include "roboeffect_api.h"
#include "roboeffect_config.h"



#include "ai_denoise.h" 

#include "simple_gain.h" 

#ifdef CFG_APP_CONFIG
	#include "app_config.h"
	#ifdef CFG_AI_DENOISE_EN
		#define AI_DENOISE_ENABLE                  (1)
	#else
		#define AI_DENOISE_ENABLE                  (0)
	#endif
#else
	#define AI_DENOISE_ENABLE                  (1)
#endif

#define SIMPLE_GAIN_ENABLE                 (0)


//Add AI_DENOISE_INFO_DATA to USER_DEFINED_LIBS_DATA
#define AI_DENOISE_INFO_DATA \
0x41, 0x00, \
0x01, 0x02, 0x00, \
0x0A, \
0x61, 0x69, 0x5F, 0x64, 0x65, 0x6E, 0x6F, 0x69, 0x73, 0x65, \
0x00, \
0x00, \
0x01, \
0x00, \
0x01, \
0x01, \
0x01, \
0x0D, \
0x64, 0x65, 0x6E, 0x6F, 0x69, 0x73, 0x65, 0x5F, 0x6C, 0x65, 0x76, 0x65, 0x6C, \
0x02, \
0x00, 0x00, \
0x5A, 0x00, \
0x01, 0x00, \
0x1E, 0x00, \
0x02, 0x00, \
0x00, \
0x00, \
0x00, \
0x01, 0x00, \
0x0C, \
0x64, 0x65, 0x6E, 0x6F, 0x69, 0x73, 0x65, 0x20, 0x64, 0x65, 0x65, 0x70, \
0x00, 


//ai_denoise interface
bool roboeffect_ai_denoise_init_if(void *node);
bool roboeffect_ai_denoise_config_if(void *node, int16_t *new_param, uint8_t param_num, uint8_t len);
bool roboeffect_ai_denoise_apply_if(void *node, int16_t *pcm_in1, int16_t *pcm_in2, int16_t *pcm_out, int32_t n);
int32_t roboeffect_ai_denoise_memory_size_if(roboeffect_memory_size_query *query, roboeffect_memory_size_response *response);


//Add AI_DENOISE_INTERFACE to USER_DEFINED_INTERFACE
#if AI_DENOISE_ENABLE
#define AI_DENOISE_INTERFACE \
	{ROBOEFFECT_AI_DENOISE, ROBOEFFECT_CH_MONO, FZ_ANY, 1, 4,\
	roboeffect_ai_denoise_init_if, roboeffect_ai_denoise_config_if, roboeffect_ai_denoise_apply_if, roboeffect_ai_denoise_memory_size_if,\
	},
#else
#define AI_DENOISE_INTERFACE \
	{ROBOEFFECT_AI_DENOISE, ROBOEFFECT_CH_MONO, FZ_ANY, 1, 4,\
	roboeffect_null_init_if, roboeffect_null_config_if, roboeffect_null_apply_if, roboeffect_null_memory_size_if,\
	},
#endif

//Add SIMPLE_GAIN_INFO_DATA to USER_DEFINED_LIBS_DATA
#define SIMPLE_GAIN_INFO_DATA \
0x3A, 0x00, \
0x01, 0x00, 0x00, \
0x0B, \
0x73, 0x69, 0x6D, 0x70, 0x6C, 0x65, 0x5F, 0x67, 0x61, 0x69, 0x6E, \
0x00, \
0x02, \
0x01, \
0x00, \
0x03, \
0x03, \
0x02, \
0x04, \
0x6D, 0x75, 0x74, 0x65, \
0x00, \
0x00, 0x00, \
0x00, 0x00, \
0x04, \
0x67, 0x61, 0x69, 0x6E, \
0x02, \
0xD8, 0xDC, \
0xB0, 0x04, \
0x0A, 0x00, \
0x00, 0x00, \
0x00, 0x00, \
0x00, \
0x01, \
0x02, \
0x64, 0x42, \
0x02, \
0x64, 0x00, \
0x00, \
0x00, 


//simple_gain interface
bool roboeffect_simple_gain_init_if(void *node);
bool roboeffect_simple_gain_config_if(void *node, int16_t *new_param, uint8_t param_num, uint8_t len);
bool roboeffect_simple_gain_apply_if(void *node, int16_t *pcm_in1, int16_t *pcm_in2, int16_t *pcm_out, int32_t n);
int32_t roboeffect_simple_gain_memory_size_if(roboeffect_memory_size_query *query, roboeffect_memory_size_response *response);


//Add SIMPLE_GAIN_INTERFACE to USER_DEFINED_INTERFACE
#if SIMPLE_GAIN_ENABLE
#define SIMPLE_GAIN_INTERFACE \
	{ROBOEFFECT_SIMPLE_GAIN, ROBOEFFECT_CH_MONO_STEREO, FZ_ANY, 2, 4,\
	roboeffect_simple_gain_init_if, roboeffect_simple_gain_config_if, roboeffect_simple_gain_apply_if, roboeffect_simple_gain_memory_size_if,\
	},
#else
#define SIMPLE_GAIN_INTERFACE \
	{ROBOEFFECT_SIMPLE_GAIN, ROBOEFFECT_CH_MONO_STEREO, FZ_ANY, 2, 4,\
	roboeffect_null_init_if, roboeffect_null_config_if, roboeffect_null_apply_if, roboeffect_null_memory_size_if,\
	},
#endif


#define USER_DEFINED_INTERFACE \
	AI_DENOISE_INTERFACE \
	SIMPLE_GAIN_INTERFACE

#define USER_DEFINED_LIBS_DATA \
	AI_DENOISE_INFO_DATA \
	SIMPLE_GAIN_INFO_DATA

typedef enum _roboeffect_user_effect_type_enum
{
	/*Add user define effect ID here*/
	ROBOEFFECT_AI_DENOISE = ROBOEFFECT_USER_DEFINED_EFFECT_BEGIN,
	ROBOEFFECT_SIMPLE_GAIN,
	ROBOEFFECT_TOTAL_MAX,
} roboeffect_user_effect_type_enum;

/*parameters version helper data:*/
#if 0
0x1E, 0x00, //3rd party data total length
0x02, //number of 3rd party items

/*ai_denoise*/
0x0A, // ai_denoise name length
0x01, 0x02, 0x00, // effect version
0x61, 0x69, 0x5F, 0x64, 0x65, 0x6E, 0x6F, 0x69, 0x73, 0x65, 

/*simple_gain*/
0x0B, // simple_gain name length
0x01, 0x00, 0x00, // effect version
0x73, 0x69, 0x6D, 0x70, 0x6C, 0x65, 0x5F, 0x67, 0x61, 0x69, 0x6E, 

/*Total length: 32*/

#endif

